name: $(BuildDefinitionName)-$(BuildID)
trigger:
 - master
pr: none

stages:
- stage: Build
  jobs:
  - job:
    strategy:
      matrix:
        Ubuntu:
          IMAGE_NAME: 'ubuntu-18.04'
          SCRIPT: 'build.sh'
        macOS:
          IMAGE_NAME: 'macOS-10.14'
          SCRIPT: 'build.sh'
        Windows:
          IMAGE_NAME: 'windows-2019'
          SCRIPT: 'build.bat'
    pool:
      vmImage: $(IMAGE_NAME)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'
      - script: .azure-pipelines/$(SCRIPT)
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: dist/
          artifactName: angr-management-$(IMAGE_NAME)

- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Release
    pool:
      vmImage: ubuntu-18.04
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        path: $(Build.SourcesDirectory)/dist/
    - task: GitHubRelease@1
      displayName: 'Create Github Release'
      inputs:
        gitHubConnection: angr-management
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: auto
        name: 'angr-management nightly preview'
        isPreRelease: true
        assets: |
          dist/angr-management-windows-2019/*
          dist/angr-management-macOS-10.14/*
          dist/angr-management-ubuntu-18.04/*
